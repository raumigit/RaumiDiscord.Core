// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaumiDiscord.Core.Server.DeltaRaumi.Database.DataContext;

#nullable disable

namespace RaumiDiscord.Core.Server.DeltaRaumi.Database.Migrations
{
    [DbContext(typeof(DeltaRaumiDbContext))]
    [Migration("20250511082624_FixModels-GuildUserModel-fixInsertGuid")]
    partial class FixModelsGuildUserModelfixInsertGuid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.DiscordComponentModel", b =>
                {
                    b.Property<Guid>("CustomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeltaRaumiComponentType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.GuildBaseDataModel", b =>
                {
                    b.Property<string>("GuildId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogChannel")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("MaxUploadLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PremiumSubscriptionCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremiumTier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WelcomeChannnelID")
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId");

                    b.ToTable("GuildBases");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.UrlDataModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiscordUser")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Publish")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TTL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UrlDataModels");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.UserBaseDataModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Barthday")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWebhook")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserBases");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.UserGuildDataModel", b =>
                {
                    b.Property<Guid>("guId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildAvatarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GuildUserFlags")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Guild_Exp")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Latest_Exp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimedOutUntil")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalMessage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("guId");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGuildData");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.Api.Models.UserGuildDataModel", b =>
                {
                    b.HasOne("RaumiDiscord.Core.Server.Api.Models.GuildBaseDataModel", "GuildBaseData")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaumiDiscord.Core.Server.Api.Models.UserBaseDataModel", "UserBaseData")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildBaseData");

                    b.Navigation("UserBaseData");
                });
#pragma warning restore 612, 618
        }
    }
}
