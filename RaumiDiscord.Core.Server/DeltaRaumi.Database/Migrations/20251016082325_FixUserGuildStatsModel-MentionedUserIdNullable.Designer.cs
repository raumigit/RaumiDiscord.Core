// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaumiDiscord.Core.Server.DeltaRaumi.Database.DataContext;

#nullable disable

namespace RaumiDiscord.Core.Server.DeltaRaumi.Database.Migrations
{
    [DbContext(typeof(DeltaRaumiDbContext))]
    [Migration("20251016082325_FixUserGuildStatsModel-MentionedUserIdNullable")]
    partial class FixUserGuildStatsModelMentionedUserIdNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.DiscordComponentModel", b =>
                {
                    b.Property<Guid>("CustomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeltaRaumiComponentType")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkCode")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimeToLive")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.GuildBaseDataModel", b =>
                {
                    b.Property<string>("GuildId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LogChannel")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<ulong>("MaxUploadLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpenLogChannel")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("PremiumSubscriptionCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremiumTier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WelcomeChannnelId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId");

                    b.ToTable("GuildBases");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.LinkedAccountModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LinkedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LinkedAccount");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UrlDataModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiscordUser")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Publish")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Ttl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(65535)
                        .HasColumnType("TEXT");

                    b.Property<int>("UrlType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UrlDataModels");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UserBaseDataModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Barthday")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWebhook")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetToMention")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Userstatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserBases");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UserGuildDataModel", b =>
                {
                    b.Property<Guid>("GuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildAvatarId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("GuildExp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("GuildUserFlags")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LatestExp")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetToMention")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimedOutUntil")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalMessage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("GuId");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGuildData");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UserGuildStatsModel", b =>
                {
                    b.Property<string>("StatUlid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MentionedUserId")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("StatUlid");

                    b.ToTable("UserGuildStats");
                });

            modelBuilder.Entity("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UserGuildDataModel", b =>
                {
                    b.HasOne("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.GuildBaseDataModel", "GuildBaseData")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaumiDiscord.Core.Server.DeltaRaumi.Database.Models.UserBaseDataModel", "UserBaseData")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildBaseData");

                    b.Navigation("UserBaseData");
                });
#pragma warning restore 612, 618
        }
    }
}
